<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ks.dao.PublicLoginMapper">
  <resultMap id="BaseResultMap" type="com.ks.dto.PublicLogin">
    <id column="customer_id" jdbcType="VARCHAR" property="customerId" />
    <id column="access_id" jdbcType="VARCHAR" property="accessId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="is_lock" jdbcType="BIT" property="isLock" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    customer_id, access_id, password, is_lock
  </sql>
  <select id="selectByExample" parameterType="com.ks.dto.PublicLoginExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.ks.dto.PublicLoginKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from public_login
    where customer_id = #{customerId,jdbcType=VARCHAR}
      and access_id = #{accessId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.ks.dto.PublicLoginKey">
    delete from public_login
    where customer_id = #{customerId,jdbcType=VARCHAR}
      and access_id = #{accessId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ks.dto.PublicLoginExample">
    delete from public_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ks.dto.PublicLogin">
    insert into public_login (customer_id, access_id, password, 
      is_lock)
    values (#{customerId,jdbcType=VARCHAR}, #{accessId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{isLock,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.ks.dto.PublicLogin">
    insert into public_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="accessId != null">
        access_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="isLock != null">
        is_lock,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="accessId != null">
        #{accessId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isLock != null">
        #{isLock,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ks.dto.PublicLoginExample" resultType="java.lang.Long">
    select count(*) from public_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update public_login
    <set>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=VARCHAR},
      </if>
      <if test="record.accessId != null">
        access_id = #{record.accessId,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.isLock != null">
        is_lock = #{record.isLock,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update public_login
    set customer_id = #{record.customerId,jdbcType=VARCHAR},
      access_id = #{record.accessId,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      is_lock = #{record.isLock,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ks.dto.PublicLogin">
    update public_login
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isLock != null">
        is_lock = #{isLock,jdbcType=BIT},
      </if>
    </set>
    where customer_id = #{customerId,jdbcType=VARCHAR}
      and access_id = #{accessId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ks.dto.PublicLogin">
    update public_login
    set password = #{password,jdbcType=VARCHAR},
      is_lock = #{isLock,jdbcType=BIT}
    where customer_id = #{customerId,jdbcType=VARCHAR}
      and access_id = #{accessId,jdbcType=VARCHAR}
  </update>
</mapper>