<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ks.dao.ExamUserAnswerYaMapper">
  <resultMap id="BaseResultMap" type="com.ks.dto.ExamUserAnswerYa">
    <id column="user_answer_id" jdbcType="VARCHAR" property="userAnswerId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="course_id" jdbcType="VARCHAR" property="courseId" />
    <result column="question_bank_id" jdbcType="VARCHAR" property="questionBankId" />
    <result column="question_id" jdbcType="VARCHAR" property="questionId" />
    <result column="user_answer" jdbcType="VARCHAR" property="userAnswer" />
    <result column="true_answer" jdbcType="VARCHAR" property="trueAnswer" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_answer_id, user_id, course_id, question_bank_id, question_id, user_answer, true_answer, 
    type
  </sql>
  <select id="selectByExample" parameterType="com.ks.dto.ExamUserAnswerYaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_user_answer_ya
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam_user_answer_ya
    where user_answer_id = #{userAnswerId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from exam_user_answer_ya
    where user_answer_id = #{userAnswerId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ks.dto.ExamUserAnswerYaExample">
    delete from exam_user_answer_ya
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ks.dto.ExamUserAnswerYa">
    insert into exam_user_answer_ya (user_answer_id, user_id, course_id, 
      question_bank_id, question_id, user_answer, 
      true_answer, type)
    values (#{userAnswerId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, 
      #{questionBankId,jdbcType=VARCHAR}, #{questionId,jdbcType=VARCHAR}, #{userAnswer,jdbcType=VARCHAR}, 
      #{trueAnswer,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ks.dto.ExamUserAnswerYa">
    insert into exam_user_answer_ya
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userAnswerId != null">
        user_answer_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="questionBankId != null">
        question_bank_id,
      </if>
      <if test="questionId != null">
        question_id,
      </if>
      <if test="userAnswer != null">
        user_answer,
      </if>
      <if test="trueAnswer != null">
        true_answer,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userAnswerId != null">
        #{userAnswerId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="questionBankId != null">
        #{questionBankId,jdbcType=VARCHAR},
      </if>
      <if test="questionId != null">
        #{questionId,jdbcType=VARCHAR},
      </if>
      <if test="userAnswer != null">
        #{userAnswer,jdbcType=VARCHAR},
      </if>
      <if test="trueAnswer != null">
        #{trueAnswer,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ks.dto.ExamUserAnswerYaExample" resultType="java.lang.Long">
    select count(*) from exam_user_answer_ya
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam_user_answer_ya
    <set>
      <if test="record.userAnswerId != null">
        user_answer_id = #{record.userAnswerId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.questionBankId != null">
        question_bank_id = #{record.questionBankId,jdbcType=VARCHAR},
      </if>
      <if test="record.questionId != null">
        question_id = #{record.questionId,jdbcType=VARCHAR},
      </if>
      <if test="record.userAnswer != null">
        user_answer = #{record.userAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.trueAnswer != null">
        true_answer = #{record.trueAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam_user_answer_ya
    set user_answer_id = #{record.userAnswerId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      question_bank_id = #{record.questionBankId,jdbcType=VARCHAR},
      question_id = #{record.questionId,jdbcType=VARCHAR},
      user_answer = #{record.userAnswer,jdbcType=VARCHAR},
      true_answer = #{record.trueAnswer,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ks.dto.ExamUserAnswerYa">
    update exam_user_answer_ya
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="questionBankId != null">
        question_bank_id = #{questionBankId,jdbcType=VARCHAR},
      </if>
      <if test="questionId != null">
        question_id = #{questionId,jdbcType=VARCHAR},
      </if>
      <if test="userAnswer != null">
        user_answer = #{userAnswer,jdbcType=VARCHAR},
      </if>
      <if test="trueAnswer != null">
        true_answer = #{trueAnswer,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where user_answer_id = #{userAnswerId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ks.dto.ExamUserAnswerYa">
    update exam_user_answer_ya
    set user_id = #{userId,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=VARCHAR},
      question_bank_id = #{questionBankId,jdbcType=VARCHAR},
      question_id = #{questionId,jdbcType=VARCHAR},
      user_answer = #{userAnswer,jdbcType=VARCHAR},
      true_answer = #{trueAnswer,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR}
    where user_answer_id = #{userAnswerId,jdbcType=VARCHAR}
  </update>
</mapper>